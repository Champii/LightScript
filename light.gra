S: Statement+

Block: !BracketBlock | Statement
BracketBlock: %"\n"? %Spaces %"{" %"\n"? Statement* %Spaces %"}" %"\n"?


Statement: %Spaces Class | ControlStruct | Expression | %"\n" %Delimiter?
Assignable: !Function | Operation | Literal | FunctionCall | VariableName
Expression: Assignation | TypeAssignation | Return | !Assignable
ControlStruct: Cond | Loop | Comment

VariableName: %Letter %Alphanum*
InlineTypeDeclaration: %Spaces ":" %Spaces Type
Assignation: VariableName InlineTypeDeclaration? %Spaces %"=" %Spaces !Assignable
TypeAssignation: VariableName %Spaces %":" %Spaces TypeExpression

TypeExpression: Type %Spaces !FunctionTypeExpression?
FunctionTypeExpression: %"->" %Spaces !TypeExpression
Type: VariableName

Function: FunctionExpression | ArrowFunction
FunctionExpression: FunctionArguments? %Spaces "!"? %"->" !Block
ArrowFunction: FunctionArguments? %Spaces "!"? %"~>" !Block

FunctionArguments: %"(" %Spaces FunctionArgument? %Spaces %")"
FunctionArgument: VariableName InlineTypeDeclaration? !FunctionArgumentComa?
FunctionArgumentComa: %Spaces %"," %Spaces !FunctionArgument

FunctionCall: VariableName !ParensCall | !SpaceCall | !BangCall
ParensCall: %"(" %Spaces CallArg? %Spaces %")"
SpaceCall: %Spaces CallArg
BangCall: %"!"

CallArg: !Assignable !CallArgComa?
CallArgComa: %Spaces %"," %Spaces !CallArg

Return: "return" %Spaces !Assignable

Comment: %"#" %Character*
Loop: %"for" | %"while" %Spaces !TestExpression
Cond: %"if" %Spaces !TestExpression %Spaces Block %Spaces Else?
Else: %"else" %Spaces Block

TestExpression: Test
Test: !Operand %Spaces TestOp %Spaces !Operand
TestOp: "!==" | "==="

Operand: Literal | FunctionCall | VariableName
Operation: !Operand %Spaces Operator %Spaces !Operation | !Operand
Operator: "+" | "-" | "*" | "/"


Literal: StringLiteral | NumericLiteral

NumericLiteral: %Number
StringLiteral: %"'" %Character* %"'"

Spaces: " "*
Delimiter: "\n"

Class: %"class" %Spaces VariableName %Spaces ClassBlock
ClassBlock: %"\n"? %Spaces %"{" %"\n"? ClassStatement* %Spaces %"}" %"\n"?
ClassStatement: %Spaces ClassMethodDeclaration | ClassPropertyDeclaration | %"\n" %Delimiter?
ClassPropertyDeclaration: VariableName InlineTypeDeclaration?
ClassMethodDeclaration: VariableName %Spaces %":" %Spaces ClassMethod
ClassMethod: !Function
